{"version":3,"sources":["node_modules\\input-core\\lib\\functions\\defineMaskList.js","node_modules\\input-core\\lib\\constants\\charTypesEnum.js","node_modules\\input-core\\lib\\functions\\inputValue.js","node_modules\\input-core\\lib\\functions\\removeSelectedRange.js","node_modules\\input-core\\lib\\inputCore.js","node_modules\\subscribe-event\\subscribe.js","node_modules\\mask-input\\lib\\maskInput.js","ui_controller.js","index.js"],"names":["UIController","addInput","addNameInp","addButton","preloader","document","getElementById","button","addEventListener","regExp","inpCard","value","cardValue","replace","fetch","then","res","status","json","Promise","reject","maskInput","MaskInput","mask","alwaysShowMask","maskChar","onChange","validationCard","bind","test","style","border","background","buleanCard","inpName","onchange","nameValidation","buleanName","window","buttonValidate","removeAttribute","setAttribute","cached","addTable","JSON","parse","loader","display","getButton","result","localStorage","getItem","table","remove","obj","removeTable","createElement","id","i","tr","name","innerHTML","toUpperCase","slice","appendChild","body","clearBtn","textContent","onclick","cardCache","uiController"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"test_parcel.6aaf0540.map","sourceRoot":"..","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = defineMaskList;\n/**\n *\n * @param {String} mask\n * @param format\n * @returns {Array}\n */\nfunction defineMaskList(mask, format) {\n    if (!mask) {\n        return [];\n    }\n\n    var stack = [];\n    var escape = false;\n\n    for (var i = 0; i < mask.length; i++) {\n        var item = format[mask[i]];\n        if (escape && item) {\n            item = null;\n            escape = false;\n        }\n        if (!item) {\n            if (!escape && mask[i] === '\\\\') {\n                escape = true;\n                continue;\n            }\n            escape = false;\n            stack.push({\n                char: mask[i],\n                next: null\n            });\n        } else if (item.regexp) {\n            stack.push(item);\n        }\n    }\n\n    return stack;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    USER: 1,\n    CHAR: 2,\n    MASK: 3\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = inputValue;\n\nvar _charTypesEnum = require('../constants/charTypesEnum.js');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction inputValue(_ref) {\n    var data = _ref.data,\n        _ref$input = _ref.input,\n        input = _ref$input === undefined ? '' : _ref$input,\n        selection = _ref.selection,\n        mask = _ref.mask,\n        maskChar = _ref.maskChar,\n        maskString = _ref.maskString;\n\n    var value = [];\n    var maskedValue = '';\n\n    var maskIndex = 0;\n    var valueIndex = 0;\n    var pastedIndex = 0;\n\n    var inputValuesApplied = 0;\n\n    while (mask[maskIndex]) {\n        var item = data.length > valueIndex ? data[valueIndex] : null;\n        var maskPart = mask[maskIndex];\n\n        var pastedValuesStack = null;\n        if (selection.start <= maskIndex && pastedIndex < input.length) {\n            pastedValuesStack = input.slice(pastedIndex);\n        }\n\n        // Обработка захардкоженных в маску символов. \n        if (maskPart.char) {\n            // Если есть вводимые пользователем значение, в первую очередь проверяем его.\n            // Но не проверяем по всему стеку.\n            if (pastedValuesStack && pastedValuesStack[0] === maskPart.char) {\n                pastedIndex++;\n            } else {\n                if (item && (item.char === maskPart.char || item.type !== _charTypesEnum2.default.USER) || input) {\n                    valueIndex++;\n                }\n            }\n\n            value.push({\n                char: maskPart.char,\n                type: _charTypesEnum2.default.CHAR\n            });\n\n            if (pastedValuesStack) {\n                inputValuesApplied++;\n            }\n\n            maskedValue += maskPart.char;\n        }\n\n        // Кастомный текст\n        if (maskPart.regexp) {\n            var part = null;\n\n            // Если есть вводимое пользователем значение, то проверям его. \n            // Причем пробегаемся по стеку вводимых значений, пока не найдем нужное\n            if (pastedValuesStack) {\n                var i = 0;\n                while (!maskPart.regexp.test(pastedValuesStack[i]) && pastedValuesStack.length > i) {\n                    i++;\n                    pastedIndex++;\n                }\n                if (pastedValuesStack.length > i) {\n                    pastedIndex++;\n                    inputValuesApplied++;\n\n                    // Игнорируем предыдущее значение в инпуте\n                    valueIndex++;\n\n                    part = pastedValuesStack[i];\n                    value.push({\n                        char: part,\n                        type: _charTypesEnum2.default.USER\n                    });\n                    maskedValue += part;\n                }\n            }\n\n            // В пользовательском вводе нет или невалидные данные. Пытаемся аплаить те данные, что были раньше или заменяем на плейсхолдер\n            if (!part) {\n                // Если произошел сдвиг, пропускаем лишнее значение\n                if (item && item.type === _charTypesEnum2.default.CHAR && data.length > valueIndex + 1) {\n                    valueIndex++;\n                    continue;\n                }\n                if (item && item.type === _charTypesEnum2.default.USER && maskPart.regexp.test(item.char)) {\n                    value.push({\n                        char: item.char,\n                        type: _charTypesEnum2.default.USER\n                    });\n                    maskedValue += item.char;\n                    valueIndex++;\n                } else {\n                    part = maskString ? maskString[maskIndex] : maskChar;\n\n                    value.push({\n                        char: part,\n                        type: _charTypesEnum2.default.MASK\n                    });\n\n                    if (data.length > maskIndex) {\n                        valueIndex++;\n                    }\n\n                    maskedValue += part;\n                }\n            }\n        }\n\n        maskIndex++;\n    }\n\n    var selectionPosition = selection.start + inputValuesApplied;\n\n    // Удаляем все ведующие maskChar\n    var bound = value.length - 1;\n    var charsCount = 0;\n    while (bound >= 0 && value[bound].type !== _charTypesEnum2.default.USER) {\n        if (value[bound].type === _charTypesEnum2.default.MASK) {\n            charsCount = 0;\n        }\n        if (value[bound].type === _charTypesEnum2.default.CHAR) {\n            charsCount++;\n        }\n        bound--;\n    }\n    bound += charsCount;\n\n    var visibleValue = '';\n    for (var _i = 0; _i <= bound; _i++) {\n        visibleValue += value[_i].char;\n    }\n\n    return {\n        value: value,\n        visibleValue: visibleValue,\n        maskedValue: maskedValue,\n        selection: {\n            start: selectionPosition,\n            end: selectionPosition\n        }\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = removeSelectedRange;\n\nvar _charTypesEnum = require('../constants/charTypesEnum');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction removeSelectedRange(_ref) {\n    var value = _ref.value,\n        selection = _ref.selection,\n        reformat = _ref.reformat,\n        mask = _ref.mask,\n        maskChar = _ref.maskChar,\n        maskString = _ref.maskString;\n\n    var copyMaskChar = function copyMaskChar(count) {\n        var res = [];\n        for (var i = 0; i < count; i++) {\n            res.push({\n                char: maskChar,\n                type: _charTypesEnum2.default.MASK\n            });\n        }\n        return res;\n    };\n\n    var pasteMaskSymbols = function pasteMaskSymbols() {\n        if (reformat) {\n            return '';\n        }\n\n        if (maskString) {\n            var res = [];\n            for (var i = selection.start; i < selection.end; i++) {\n                res.push({\n                    char: maskString[i],\n                    type: _charTypesEnum2.default.MASK\n                });\n            }\n            return res;\n        }\n\n        return copyMaskChar(selection.end - selection.start);\n    };\n\n    if (selection.end < selection.start) {\n        var tmp = selection.end;\n        selection.end = selection.start;\n        selection.start = tmp;\n    }\n\n    if (selection.start === selection.end) {\n        return value;\n    }\n\n    if (value.length > selection.start) {\n        return value.slice(0, selection.start).concat(pasteMaskSymbols(), value.slice(selection.end, value.length));\n    }\n\n    return value;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createInput = exports.defaults = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _defineMaskList = require('./functions/defineMaskList');\n\nvar _defineMaskList2 = _interopRequireDefault(_defineMaskList);\n\nvar _inputValue = require('./functions/inputValue');\n\nvar _inputValue2 = _interopRequireDefault(_inputValue);\n\nvar _removeSelectedRange = require('./functions/removeSelectedRange');\n\nvar _removeSelectedRange2 = _interopRequireDefault(_removeSelectedRange);\n\nvar _charTypesEnum = require('./constants/charTypesEnum');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar InputCore = function () {\n    function InputCore(_ref) {\n        var value = _ref.value,\n            mask = _ref.mask,\n            reformat = _ref.reformat,\n            maskFormat = _ref.maskFormat,\n            maskChar = _ref.maskChar,\n            maskString = _ref.maskString;\n\n        _classCallCheck(this, InputCore);\n\n        if (maskString && maskString.length !== mask.length) {\n            throw new Error('maskString must have same length as mask');\n        }\n        if (maskChar.length > 1) {\n            throw new Error('maskChar must have only 1 char');\n        }\n        this._maskString = maskString;\n        this._maskChar = maskChar;\n        this._reformat = reformat;\n        this.selection = { start: 0, end: 0 };\n\n        this.setMaskFormat(maskFormat);\n        this._mask = (0, _defineMaskList2.default)(mask, this._maskFormat);\n\n        this.setValue(value);\n    }\n\n    /**\n     * Заполняет _maskFormat, который является объектом byId объектов\n     * @param {Array} maskFormat     \n     */\n\n\n    _createClass(InputCore, [{\n        key: 'setMaskFormat',\n        value: function setMaskFormat(maskFormat) {\n            this._maskFormat = maskFormat.reduce(function (store, item) {\n                store[item.str] = item;\n                return store;\n            }, {});\n        }\n    }, {\n        key: 'input',\n        value: function input(_input) {\n            var _value = this._value;\n\n            var result = void 0;\n\n            if (this._reformat) {\n                result = this._reformat({\n                    data: _value,\n                    input: _input,\n                    selection: this.selection\n                });\n            } else {\n\n                _value = (0, _removeSelectedRange2.default)({\n                    value: _value,\n                    selection: this.selection,\n                    mask: this._mask,\n                    maskChar: this._maskChar,\n                    maskString: this._maskString\n                });\n                this.selection.end = this.selection.start;\n\n                result = (0, _inputValue2.default)({\n                    data: _value,\n                    input: _input,\n                    selection: this.selection,\n                    mask: this._mask,\n                    maskChar: this._maskChar,\n                    maskString: this._maskString\n                });\n            }\n\n            this._value = result.value;\n            this._maskedValue = result.maskedValue;\n            this._visibleValue = result.visibleValue;\n            this.setSelection(result.selection);\n        }\n    }, {\n        key: 'setSelection',\n        value: function setSelection(_ref2) {\n            var start = _ref2.start,\n                end = _ref2.end;\n\n            this.selection = {\n                start: start,\n                end: end\n            };\n        }\n    }, {\n        key: 'getSelection',\n        value: function getSelection() {\n            return {\n                start: this.selection.start,\n                end: this.selection.end\n            };\n        }\n    }, {\n        key: 'backspace',\n        value: function backspace() {\n            this.removePreviosOrSelected();\n        }\n    }, {\n        key: 'paste',\n        value: function paste(value) {\n            this.input(value);\n        }\n\n        /**\n         * Определяет циклический список, в котором учтены циклы маски, по которой будет проходить итерации.\n         * @param {String} mask\n         * @returns {{head: {}, hasCycle: boolean}}\n         */\n\n    }, {\n        key: 'setMask',\n        value: function setMask(mask) {\n\n            this._mask = (0, _defineMaskList2.default)(mask, this._maskFormat);\n\n            this.setValue(this._value);\n        }\n    }, {\n        key: 'getState',\n        value: function getState() {\n            return {\n                value: this.getValue(),\n                maskedValue: this.getMaskedValue(),\n                visibleValue: this.getVisibleValue(),\n                selection: this.getSelection()\n            };\n        }\n    }, {\n        key: 'getValue',\n        value: function getValue() {\n            return this._value;\n        }\n    }, {\n        key: 'setReformat',\n        value: function setReformat(reformat) {\n            this._reformat = reformat;\n            this.setValue(this._value);\n        }\n    }, {\n        key: 'getMaskedValue',\n        value: function getMaskedValue() {\n            return this._maskedValue;\n        }\n    }, {\n        key: 'getVisibleValue',\n        value: function getVisibleValue() {\n            return this._visibleValue;\n        }\n    }, {\n        key: 'setMaskChar',\n        value: function setMaskChar(maskChar) {\n            if (maskChar.length > 1) {\n                throw new Error('maskChar must have only 1 char');\n            }\n\n            this._maskChar = maskChar;\n\n            this.setValue(this._value);\n        }\n    }, {\n        key: 'setMaskString',\n        value: function setMaskString(maskString) {\n            if (maskString && maskString.length !== this._mask.length) {\n                throw new Error('maskString must have same length as mask');\n            }\n\n            this._maskString = maskString;\n\n            this.setValue(this._value);\n        }\n    }, {\n        key: 'removePreviosOrSelected',\n        value: function removePreviosOrSelected() {\n            if (this.selection.start === this.selection.end) {\n                this.selection.start = this.selection.end - 1;\n                if (this.selection.start < 0) {\n                    this.selection.start = 0;\n                }\n            }\n\n            this.input('');\n        }\n    }, {\n        key: 'removeNextOrSelected',\n        value: function removeNextOrSelected() {\n            if (this.selection.start === this.selection.end) {\n                this.selection.end++;\n            }\n\n            this.input('');\n        }\n    }, {\n        key: 'setValue',\n        value: function setValue(data) {\n            var result = void 0;\n\n            if (this._reformat) {\n                result = this._reformat({\n                    data: data,\n                    selection: this.selection\n                });\n            } else {\n                var dataList = data;\n                if (!Array.isArray(dataList)) {\n                    dataList = [];\n                    for (var i = 0; i < data.length; i++) {\n                        dataList.push({\n                            char: data[i],\n                            type: _charTypesEnum2.default.USER\n                        });\n                    }\n                }\n                result = (0, _inputValue2.default)({\n                    data: dataList,\n                    selection: this.selection,\n                    mask: this._mask,\n                    maskChar: this._maskChar,\n                    maskString: this._maskString\n                });\n            }\n\n            this._value = result.value;\n            this._maskedValue = result.maskedValue;\n            this._visibleValue = result.visibleValue;\n            this.setSelection(result.selection);\n        }\n    }]);\n\n    return InputCore;\n}();\n\nvar defaults = exports.defaults = {\n    maskFormat: [{\n        str: '0',\n        regexp: /[0-9]/\n    }, {\n        str: '*',\n        regexp: /./\n    }, {\n        str: 'a',\n        regexp: /[a-zA-Z]/\n    }],\n    maskChar: '',\n    showMask: false,\n    removeSelectedRange: _removeSelectedRange2.default\n};\n\nvar createInput = exports.createInput = function createInput(_ref3) {\n    var value = _ref3.value,\n        maskString = _ref3.maskString,\n        mask = _ref3.mask,\n        reformat = _ref3.reformat,\n        _ref3$maskFormat = _ref3.maskFormat,\n        maskFormat = _ref3$maskFormat === undefined ? defaults.maskFormat : _ref3$maskFormat,\n        _ref3$maskChar = _ref3.maskChar,\n        maskChar = _ref3$maskChar === undefined ? defaults.maskChar : _ref3$maskChar;\n\n    var _reformat = reformat;\n    var _mask = mask;\n    if (!_reformat && !_mask) {\n        _reformat = function _reformat(value) {\n            return value;\n        };\n    } else if (_reformat) {\n        _mask = null;\n    }\n\n    return new InputCore({ value: value, mask: _mask, reformat: _reformat, maskFormat: maskFormat, maskChar: maskChar, maskString: maskString });\n};","!(function() {\n  \"use strict\";\n\n  // Basic subscribe function both browser events or node.js events\n  function subscribe(element, event, handler, options) {\n    var unsubscribeFunctionName = \"removeEventListener\";\n    var unsubscribe = function() {\n      element[unsubscribeFunctionName](event, handler);\n    };\n\n    if (element.addEventListener) {\n      element.addEventListener(event, handler, options);\n      return unsubscribe;\n    }\n\n    if (element.attachEvent) {\n      event = \"on\" + event;\n      element.attachEvent(event, handler);\n      unsubscribeFunctionName = \"detachEvent\";\n      return unsubscribe;\n    }\n\n    if (element.on) {\n      element.on(event, handler);\n      unsubscribeFunctionName = \"off\";\n      return unsubscribe;\n    }\n  }\n\n  // define your own subscribe functions\n  subscribe.define = function(addSubscription, removeSubscription) {\n    return function(element, event, handler, options) {\n      var unsubscribe = function() {\n        element[removeSubscription](event, handler);\n      };\n\n      element[addSubscription](event, handler, options);\n      return unsubscribe;\n    };\n  };\n\n  // umd\n  if (typeof exports === \"object\") {\n    // CommonJS\n    module.exports = subscribe;\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD. anonymous module\n    define(subscribe);\n  } else {\n    // Global scope\n    global.subscribeEvent = subscribe;\n  }\n})();\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _inputCore = require('input-core');\n\nvar _subscribeEvent = require('subscribe-event');\n\nvar _subscribeEvent2 = _interopRequireDefault(_subscribeEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KEYBOARD = {\n    BACKSPACE: 8,\n    DELETE: 46\n};\n/**\n * Adapter of react-maskInput to vanilaJs\n */\n\nvar MaskInput = function () {\n    function MaskInput(element, _ref) {\n        var _this = this;\n\n        var _ref$mask = _ref.mask,\n            mask = _ref$mask === undefined ? _inputCore.defaults.mask : _ref$mask,\n            _ref$value = _ref.value,\n            value = _ref$value === undefined ? '' : _ref$value,\n            reformat = _ref.reformat,\n            maskString = _ref.maskString,\n            _ref$maskChar = _ref.maskChar,\n            maskChar = _ref$maskChar === undefined ? _inputCore.defaults.maskChar : _ref$maskChar,\n            _ref$maskFormat = _ref.maskFormat,\n            maskFormat = _ref$maskFormat === undefined ? _inputCore.defaults.maskFormat : _ref$maskFormat,\n            showMask = _ref.showMask,\n            alwaysShowMask = _ref.alwaysShowMask,\n            onChange = _ref.onChange;\n\n        _classCallCheck(this, MaskInput);\n\n        this.showValue = function () {\n            if (_this.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n                _this.element.value = _this.input.getMaskedValue();\n                return;\n            }\n            _this.element.value = _this.input.getVisibleValue();\n        };\n\n        this.setSelection = function () {\n            if (!_this.canSetSelection) {\n                return;\n            }\n            var selection = _this.input.getSelection();\n            _this.element.setSelectionRange(selection.start, selection.end);\n\n            var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (fn) {\n                return setTimeout(fn, 0);\n            };\n            // For android\n            raf(function () {\n                return _this.element.setSelectionRange(selection.start, selection.end);\n            });\n        };\n\n        this.onPaste = function (e) {\n            e.preventDefault();\n            _this.getSelection();\n\n            // getData value needed for IE also works in FF & Chrome\n            _this.input.paste(e.clipboardData.getData('Text'));\n\n            _this.showValue();\n\n            // Timeout needed for IE\n            setTimeout(_this.setSelection, 0);\n\n            _this.props.onChange && _this.props.onChange(e);\n        };\n\n        this.onChange = function (e) {\n            var currentValue = void 0;\n            if (_this.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n                currentValue = _this.input.getMaskedValue();\n            } else {\n                currentValue = _this.input.getVisibleValue();\n            }\n\n            // fix conflict by update value in mask model\n            if (e.target.value !== currentValue) {\n                _this.getSelection();\n                _this.input.setValue(e.target.value);\n\n                _this.showValue();\n\n                setTimeout(_this.setSelection, 0);\n            }\n            _this.props.onChange && _this.props.onChange(e);\n        };\n\n        this.onKeyPress = function (e) {\n            if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n                return;\n            }\n\n            e.preventDefault();\n            _this.getSelection();\n            _this.input.input(e.key || e.data || String.fromCharCode(e.which));\n            _this.showValue();\n            _this.setSelection();\n            _this.props.onChange && _this.props.onChange(e);\n        };\n\n        this.onKeyDown = function (e) {\n            if (e.which === KEYBOARD.BACKSPACE) {\n                e.preventDefault();\n                _this.getSelection();\n                _this.input.removePreviosOrSelected();\n\n                _this.showValue();\n                _this.setSelection();\n\n                _this.props.onChange && _this.props.onChange(e);\n            }\n\n            if (e.which === KEYBOARD.DELETE) {\n                e.preventDefault();\n                _this.getSelection();\n                _this.input.removeNextOrSelected();\n\n                _this.showValue();\n                _this.setSelection();\n\n                _this.props.onChange && _this.props.onChange(e);\n            }\n        };\n\n        this.onFocus = function () {\n            _this.canSetSelection = true;\n        };\n\n        this.onBlur = function () {\n            _this.canSetSelection = false;\n        };\n\n        this.input = this.input = (0, _inputCore.createInput)({\n            value: value,\n            reformat: reformat,\n            maskString: maskString,\n            maskChar: maskChar,\n            mask: mask,\n            maskFormat: maskFormat\n        });\n\n        this.props = {\n            mask: mask,\n            value: value,\n            reformat: reformat,\n            maskChar: maskChar,\n            maskFormat: maskFormat,\n            maskString: maskString,\n            showMask: showMask,\n            alwaysShowMask: alwaysShowMask,\n            onChange: onChange\n        };\n\n        this.showMask = alwaysShowMask || showMask;\n\n        this.element = element;\n        this.showValue();\n        this.subscribe();\n    }\n\n    _createClass(MaskInput, [{\n        key: 'getSelection',\n        value: function getSelection() {\n            this.input.setSelection({\n                start: this.element.selectionStart,\n                end: this.element.selectionEnd\n            });\n        }\n    }, {\n        key: 'subscribe',\n        value: function subscribe() {\n            this.unsubscribe = {\n                onPaste: (0, _subscribeEvent2.default)(this.element, 'paste', this.onPaste),\n                onKeyDown: (0, _subscribeEvent2.default)(this.element, 'keydown', this.onKeyDown),\n                onKeyPress: (0, _subscribeEvent2.default)(this.element, this.keyPressPropName(), this.onKeyPress),\n                onChange: (0, _subscribeEvent2.default)(this.element, 'change', this.onChange),\n                onFocus: (0, _subscribeEvent2.default)(this.element, 'focus', this.onFocus),\n                onBlur: (0, _subscribeEvent2.default)(this.element, 'blur', this.onBlur)\n            };\n        }\n    }, {\n        key: 'keyPressPropName',\n        value: function keyPressPropName() {\n            if (typeof navigator !== 'undefined' && navigator.userAgent.match(/Android/i)) {\n                return 'beforeinput';\n            }\n            return 'keypress';\n        }\n    }, {\n        key: 'setProps',\n        value: function setProps(_ref2) {\n            var mask = _ref2.mask,\n                value = _ref2.value,\n                reformat = _ref2.reformat,\n                maskString = _ref2.maskString,\n                maskChar = _ref2.maskChar,\n                maskFormat = _ref2.maskFormat,\n                showMask = _ref2.showMask,\n                alwaysShowMask = _ref2.alwaysShowMask,\n                onChange = _ref2.onChange;\n\n            var updated = false;\n\n            if (this.props.onChange !== onChange) {\n                this.props.onChange = onChange;\n            }\n\n            if (this.props.alwaysShowMask !== alwaysShowMask || this.props.showMask !== showMask) {\n                this.showMask = alwaysShowMask || showMask;\n\n                this.props.alwaysShowMask = alwaysShowMask;\n                this.props.showMask = showMask;\n\n                updated = true;\n            }\n\n            if (maskFormat && maskFormat !== this.props.maskFormat) {\n                this.input.setMaskFormat(maskFormat);\n\n                this.props.maskFormat = maskFormat;\n\n                updated = true;\n            }\n\n            if (mask !== this.props.mask) {\n                this.input.setMask(mask);\n\n                this.props.mask = mask;\n\n                updated = true;\n            }\n\n            if (maskString !== this.props.maskString) {\n                this.input.setMaskString(maskString);\n\n                this.props.maskString = maskString;\n\n                updated = true;\n            }\n\n            if (maskChar !== this.props.maskChar) {\n                this.input.setMaskChar(maskChar);\n\n                this.props.maskChar = maskChar;\n\n                updated = true;\n            }\n\n            if (reformat !== this.props.reformat) {\n                this.input.setReformat(reformat);\n\n                this.props.reformat = reformat;\n\n                updated = true;\n            }\n\n            if (value !== this.props.value) {\n                this.input.setValue(value);\n\n                this.props.value = value;\n\n                updated = true;\n            }\n\n            if (updated) {\n                this.showValue();\n                this.setSelection();\n            }\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.unsubscribe.onPaste();\n            this.unsubscribe.onKeyDown();\n            this.unsubscribe.onKeyPress();\n            this.unsubscribe.onChange();\n            this.unsubscribe.onFocus();\n            this.unsubscribe.onBlur();\n        }\n    }]);\n\n    return MaskInput;\n}();\n\nexports.default = MaskInput;","import MaskInput from './node_modules/mask-input';\r\n\r\nexport default class UIController {\r\n    constructor () {\r\n        this.addInput();\r\n        this.addNameInp();\r\n        this.addButton();\r\n        this.preloader = document.getElementById('preloader');\r\n        this.button.addEventListener('click', () => {\r\n            let regExp = /\\-/g;\r\n                   if (this.inpCard.value !== this.cardValue) {\r\n                    this.cardValue = this.inpCard.value.replace(regExp, '');\r\n                    // console.log(this.cardValue);\r\n            return fetch(`https://api.bincodes.com/cc/?format=json&api_key=d96ca493f5be297f8c304a87edcdf6a8&cc=${this.cardValue}`)\r\n                .then(res => {\r\n                    if(res.status === 200) {\r\n                        return res.json();\r\n                    } else {\r\n                        return Promise.reject(res.status);\r\n                    }\r\n                })\r\n        }\r\n        });\r\n    }\r\n    \r\n    \r\n    addInput() {\r\n        this.inpCard = document.getElementById('inp1');\r\n        \r\n        this.maskInput = new MaskInput(this.inpCard, {\r\n            mask: '0000-0000-0000-0000',\r\n            alwaysShowMask: true,\r\n            maskChar: '_',\r\n            onChange: this.validationCard.bind(this),\r\n          });\r\n    }\r\n\r\n\r\n    validationCard() {\r\n        this.regExp = /^\\d{4}[- ]\\d{4}[- ]\\d{4}[- ]\\d{4}$/;\r\n        if (!this.regExp.test(this.inpCard.value)) {\r\n            this.inpCard.style.border = '2px solid rgba(255, 0, 0, 0.4)';\r\n            this.inpCard.style.background = 'rgba(255, 0, 0, 0.05)';\r\n            this.buleanCard = false;\r\n        } else {\r\n            this.inpCard.style.border = '2px solid lightgreen';\r\n            this.inpCard.style.background = 'rgba(125, 191, 95, 0.1)';\r\n            this.buleanCard = true;\r\n        }\r\n    }\r\n\r\n    addNameInp() {\r\n        this.inpName = document.getElementById('name');\r\n        this.inpName.onchange = this.nameValidation.bind(this);\r\n    }\r\n\r\n    nameValidation() {\r\n        this.regExp = /[A-z, А-я]{2,}/;\r\n        if (!this.regExp.test(this.inpName.value)) {\r\n             this.inpName.style.border = '2px solid rgba(255, 0, 0, 0.4)';\r\n            this.inpName.style.background = 'rgba(255, 0, 0, 0.05)';\r\n            this.buleanName = false;\r\n        } else {\r\n            this.inpName.style.border = '2px solid lightgreen';\r\n            this.inpName.style.background = 'rgba(125, 191, 95, 0.1)';\r\n            this.buleanName = true;\r\n        }\r\n\r\n    }\r\n\r\n    addButton() {\r\n            this.button = document.getElementById('btn');\r\n            this.button.style.border = '2px solid rgba(255, 0, 0, 0.4)';\r\n            this.button.style.background = 'rgba(255, 0, 0, 0.2)';\r\n            window.addEventListener('change', this.buttonValidate.bind(this));\r\n    }\r\n\r\n    buttonValidate() {\r\n        if(this.buleanCard && this.buleanName) {\r\n            this.button.style.border = '2px solid lightgreen';\r\n            this.button.style.background = 'rgba(125, 191, 95, 0.1)';\r\n            this.button.removeAttribute('disabled');\r\n        } else {\r\n            this.button.style.border = '2px solid rgba(255, 0, 0, 0.4)';\r\n            this.button.style.background = 'rgba(255, 0, 0, 0.05)';\r\n            this.button.setAttribute('disabled', 'true');\r\n        }\r\n    }\r\n\r\n    clickBtn (cardValue) {\r\n        this.button.addEventListener('click', () => {\r\n            if (cached) {\r\n                this.addTable(JSON.parse(cached));\r\n              } else {\r\n                this.loader.style.display = 'inline';\r\n                getButton(cardValue)\r\n                  .then((result) => {\r\n                    this.addTable(result);\r\n                    this.loader.style.display = 'none';\r\n                  });\r\n              }\r\n            const cached = localStorage.getItem(buleanCard);\r\n        });\r\n    }\r\n\r\n    removeTable() {\r\n        if (this.table) {\r\n          this.table.remove();\r\n        }\r\n      }\r\n    \r\n      addTable(obj) {\r\n        this.removeTable();\r\n        this.table = document.createElement('table');\r\n        this.table.id = 'table';\r\n    \r\n        for (const i in obj) {\r\n          const tr = document.createElement('tr');\r\n          const name = document.createElement('td');\r\n          const value = document.createElement('td');\r\n          name.innerHTML = i[0].toUpperCase() + i.slice(1);\r\n          value.innerHTML = obj[i] || 'Unknown';\r\n          tr.appendChild(name);\r\n          tr.appendChild(value);\r\n          this.table.appendChild(tr);\r\n        }\r\n    \r\n        document.body.appendChild(this.table);\r\n        this.clearBtn();\r\n      }\r\n\r\n      clearBtn() {\r\n            this.clearBtn = document.getElementById('clearBtn');\r\n            this.clearBtn.id = 'clear';\r\n            this.clearBtn.textContent = 'clear';\r\n            this.clearBtn.onclick = () => {\r\n            this.table.remove();\r\n            this.cardCache = {};\r\n            this.clearBtn.remove();\r\n\r\n        }\r\n    }\r\n\r\n}","import UIController from './ui_controller';\r\n\r\nconst uiController = new UIController();"]}